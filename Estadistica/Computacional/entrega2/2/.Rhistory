}
return( list(pasos=pasos, progresionX=progresionX[1:pasos+1], progresionY=progresionY[1:pasos+1]) )
}
mov=movimiento(P)
P
mov$pasos
mov=movimiento()
mov$pasos
mov=movimiento(P)
P
mov$pasos
mov$progresionY[pasos]
mov$progresionY[mov$pasos]
mov$progresionY[mov$pasos+1]
mov$progresionY[1:10]
mov$progresionY[1:100]
movimiento<-function(inicio=c(0,1005), max=10000){
progresionX=vector(mode="numeric", length = max)
progresionY=vector(mode="numeric", length = max)
P=inicio
pasos=0
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
while(dentro(P)){
dados=sample(6,3,T) # Resultado de los tres dados
if(dados[1]<=2 || dados[1]==6) # Si el primer dado es 1, 2 ó 6
P[1]=P[1]+1 # A la derecha
else
P[1]=P[1]-1 # A la derecha
if(dados[2]+dados[3]<7) # Si la suma del segundo dado y el tercero es menor que 7
P[2]=P[2]+1 # Hacia arriba
else
P[2]=P[2]-1 # Hacia abajo
pasos=pasos+1
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
}
return( list(pasos=pasos, progresionX=progresionX[1:pasos+1], progresionY=progresionY[1:pasos+1]) )
}
mov=movimiento(P)
P
mov$progresionY[mov$pasos+1]
mov$progresionY[1:100]
mov$progresionX[mov$pasos+1]
mov$progresionX[mov$pasos]
while(dentro(P)){
dados=sample(6,3,T) # Resultado de los tres dados
if(dados[1]<=2 || dados[1]==6) # Si el primer dado es 1, 2 ó 6
P[1]=P[1]+1 # A la derecha
else
P[1]=P[1]-1 # A la derecha
if(dados[2]+dados[3]<7) # Si la suma del segundo dado y el tercero es menor que 7
P[2]=P[2]+1 # Hacia arriba
else
P[2]=P[2]-1 # Hacia abajo
pasos=pasos+1
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
}
movimiento<-function(inicio=c(0,1005), max=10000){
progresionX=vector(mode="numeric", length = max)
progresionY=vector(mode="numeric", length = max)
P=inicio
pasos=0
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
while(dentro(P)){
dados=sample(6,3,T) # Resultado de los tres dados
if(dados[1]<=2 || dados[1]==6) # Si el primer dado es 1, 2 ó 6
P[1]=P[1]+1 # A la derecha
else
P[1]=P[1]-1 # A la derecha
if(dados[2]+dados[3]<7) # Si la suma del segundo dado y el tercero es menor que 7
P[2]=P[2]+1 # Hacia arriba
else
P[2]=P[2]-1 # Hacia abajo
pasos=pasos+1
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
}
return( list(pasos=pasos, progresionX=progresionX[1:pasos+1], progresionY=progresionY[1:pasos+1]) )
}
mov=movimiento(P)
P
mov$progresionY[mov$pasos]
mov$progresionY[mov$pasos-1]
mov$progresionY[mov$pasos+1]
mov$progresionY[mov$pasos+2]
mov$progresionY[mov$pasos]
length(mov$progresionX)
pasos
mov$pasos
length(mov$progresionX)
mov$pasos
movimiento<-function(inicio=c(0,1005), max=50000){
progresionX=vector(mode="numeric", length = max)
progresionY=vector(mode="numeric", length = max)
P=inicio
pasos=0
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
while(dentro(P)){
dados=sample(6,3,T) # Resultado de los tres dados
if(dados[1]<=2 || dados[1]==6) # Si el primer dado es 1, 2 ó 6
P[1]=P[1]+1 # A la derecha
else
P[1]=P[1]-1 # A la derecha
if(dados[2]+dados[3]<7) # Si la suma del segundo dado y el tercero es menor que 7
P[2]=P[2]+1 # Hacia arriba
else
P[2]=P[2]-1 # Hacia abajo
pasos=pasos+1
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
}
return( list(pasos=pasos, progresionX=progresionX[1:pasos+1], progresionY=progresionY[1:pasos+1]) )
}
mov=movimiento(P)
P
mov$progresionY[mov$pasos]
length(mov$progresionX)
mov$pasos
mov$progresionY[1:100]
P
mov$progresionY[mov$pasos]
length(mov$progresionX)
mov$pasos
pasos=pasos+1
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
movimiento<-function(inicio=c(0,1005), max=50000){
progresionX=vector(mode="numeric", length = max)
progresionY=vector(mode="numeric", length = max)
P=inicio
pasos=0
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
while(dentro(P)){
dados=sample(6,3,T) # Resultado de los tres dados
if(dados[1]<=2 || dados[1]==6) # Si el primer dado es 1, 2 ó 6
P[1]=P[1]+1 # A la derecha
else
P[1]=P[1]-1 # A la derecha
if(dados[2]+dados[3]<7) # Si la suma del segundo dado y el tercero es menor que 7
P[2]=P[2]+1 # Hacia arriba
else
P[2]=P[2]-1 # Hacia abajo
pasos=pasos+1
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
}
return( list(pasos=pasos, progresionX=progresionX[1:pasos+1], progresionY=progresionY[1:pasos+1]) )
}
mov=movimiento(P)
P
mov$progresionY[mov$pasos]
mov$progresionY[mov$pasos+1]
mov$progresionY[mov$pasos]
length(mov$progresionX)
mov$pasos
mov=movimiento(P)
P
mov$progresionY[1:10]
mov=movimiento(P)
P
mov$progresionY[1:10]
cat(progresionY[1])
movimiento<-function(inicio=c(0,1005), max=50000){
progresionX=vector(mode="numeric", length = max)
progresionY=vector(mode="numeric", length = max)
P=inicio
pasos=0
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
cat(progresionY[1])
while(dentro(P)){
dados=sample(6,3,T) # Resultado de los tres dados
if(dados[1]<=2 || dados[1]==6) # Si el primer dado es 1, 2 ó 6
P[1]=P[1]+1 # A la derecha
else
P[1]=P[1]-1 # A la derecha
if(dados[2]+dados[3]<7) # Si la suma del segundo dado y el tercero es menor que 7
P[2]=P[2]+1 # Hacia arriba
else
P[2]=P[2]-1 # Hacia abajo
pasos=pasos+1
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
}
return( list(pasos=pasos, progresionX=progresionX[1:pasos+1], progresionY=progresionY[1:pasos+1]) )
}
mov=movimiento(P)
P
movimiento<-function(inicio=c(0,1005), max=50000){
progresionX=vector(mode="numeric", length = max)
progresionY=vector(mode="numeric", length = max)
P=inicio
pasos=0
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
cat(progresionY[1])
while(dentro(P)){
dados=sample(6,3,T) # Resultado de los tres dados
if(dados[1]<=2 || dados[1]==6) # Si el primer dado es 1, 2 ó 6
P[1]=P[1]+1 # A la derecha
else
P[1]=P[1]-1 # A la derecha
if(dados[2]+dados[3]<7) # Si la suma del segundo dado y el tercero es menor que 7
P[2]=P[2]+1 # Hacia arriba
else
P[2]=P[2]-1 # Hacia abajo
pasos=pasos+1
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
}
cat(progresionY[1])
return( list(pasos=pasos, progresionX=progresionX[1:pasos+1], progresionY=progresionY[1:pasos+1]) )
}
mov=movimiento(P)
P
mov$progresionY[mov$pasos]
movimiento<-function(inicio=c(0,1005), max=50000){
progresionX=vector(mode="numeric", length = max)
progresionY=vector(mode="numeric", length = max)
P=inicio
pasos=0
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
cat(progresionY[1])
while(dentro(P)){
dados=sample(6,3,T) # Resultado de los tres dados
if(dados[1]<=2 || dados[1]==6) # Si el primer dado es 1, 2 ó 6
P[1]=P[1]+1 # A la derecha
else
P[1]=P[1]-1 # A la derecha
if(dados[2]+dados[3]<7) # Si la suma del segundo dado y el tercero es menor que 7
P[2]=P[2]+1 # Hacia arriba
else
P[2]=P[2]-1 # Hacia abajo
pasos=pasos+1
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
}
cat(progresionY[1])
return( list(pasos=pasos, progresionX=progresionX[1:pasos+1], progresionY=progresionY[1:pasos+1]) )
}
mov=movimiento(P)
P
mov$progresionY[mov$pasos]
length(mov$progresionX)
movimiento<-function(inicio=c(0,1005), max=50000){
progresionX=vector(mode="numeric", length = max)
progresionY=vector(mode="numeric", length = max)
P=inicio
pasos=0
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
#cat(progresionY[1])
while(dentro(P)){
dados=sample(6,3,T) # Resultado de los tres dados
if(dados[1]<=2 || dados[1]==6) # Si el primer dado es 1, 2 ó 6
P[1]=P[1]+1 # A la derecha
else
P[1]=P[1]-1 # A la derecha
if(dados[2]+dados[3]<7) # Si la suma del segundo dado y el tercero es menor que 7
P[2]=P[2]+1 # Hacia arriba
else
P[2]=P[2]-1 # Hacia abajo
pasos=pasos+1
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
}
cat(progresionY[1])
return( list(pasos=pasos, progresionX=progresionX[1:pasos+1], progresionY=progresionY[1:pasos+1]) )
}
mov=movimiento(P)
P
mov$progresionY[mov$pasos]
length(mov$progresionX)
mov$pasos
mov$progresionY[1:10]
# Función auxiliar, comprueba si un punto está en el triangulo verde
dentro<-function(P){
return(P[2]>=0 && P[1]+P[2]<=2000 && P[2]-P[1]<=2000)
}
movimiento<-function(inicio=c(0,1005), max=50000){
progresionX=vector(mode="numeric", length = max)
progresionY=vector(mode="numeric", length = max)
P=inicio
pasos=0
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
cat(progresionY[1])
while(dentro(P)){
dados=sample(6,3,T) # Resultado de los tres dados
if(dados[1]<=2 || dados[1]==6) # Si el primer dado es 1, 2 ó 6
P[1]=P[1]+1 # A la derecha
else
P[1]=P[1]-1 # A la derecha
if(dados[2]+dados[3]<7) # Si la suma del segundo dado y el tercero es menor que 7
P[2]=P[2]+1 # Hacia arriba
else
P[2]=P[2]-1 # Hacia abajo
pasos=pasos+1
progresionX[pasos+1]=P[1]
progresionY[pasos+1]=P[2]
}
cat(progresionY[1])
return( list(pasos=pasos, progresionX=progresionX[1:pasos+1], progresionY=progresionY[1:pasos+1]) )
}
mov=movimiento(P)
data <- read.csv("http://www.ugr.es/~andresgc/Datos.txt")
data
data$Edad
head(data)
tail(data)
summay(data)
summary(data)
win.graph()
data$Sexo
data$Sexo<-as.factor(data$Sexo)
data
summary(data)
data <- read.csv("http://www.ugr.es/~andresgc/Datos.txt")
data$Sexo<-as.factor(data$Sexo)
summary(data)
par(mfrow=c(2,2))
plot(data)
pie(table(data))
pie(table(data$Sexo))
par(mfrow=c(2,2))
plot(data)
pie(table(data$Sexo))
pie(table(data$Sexo))
pie(table(data$Sexo))
pie(table(data$Sexo))
par(mfrow=c(2,2))
plot(data)
par(mfrow=1)
par(mfrow=c(2,2))
plot(data)
par(mfrow=c(1,1))
pie(table(data$Sexo))
par(mfrow=c(2,2))
plot(data)
par(mfrow=c(1,1))
pie(table(data$Sexo))
par(mfrow=c(1,3))
for (i in 1:3){
boxplot(data[,i]);
title(names(data)[i])
}
par(mfrow=c(1,2))
boxplot(data[,1], sub="Sin muescas")
par(mfrow=c(1,2))
boxplot(data[,1])
title(main=names(data)[1], sub="Sin muescas")
par(mfrow=c(1,2))
boxplot(data[,1])
title(main=names(data)[1], sub="Sin muescas")
boxplot(data[,2])
title(main=names(data)[2], sub="Con muescas")
boxplot(data[,2], notch=T)
par(mfrow=c(1,2))
boxplot(data[,1])
title(main=names(data)[1], sub="Sin muescas")
boxplot(data[,2], notch=T)
title(main=names(data)[2], sub="Con muescas")
hist2d(data[,1:2])
library("gplots")
library(gplots)
hist(data[,1:2])
hist(data[,1])
hist(data[,1], name="Histograma de", names(data)[i])
hist(data[,1], name="Histograma de", names(data)[i])
hist(data[,1], name=paste("Histograma de", names(data)[i]))
hist(data[,1], name=paste("Histograma de", names(data)[i]))
hist(data[,1], name=paste("Histograma de", names(data)[1]))
hist(data[,1], name=paste("Histograma de", names(data)[1]))
hist(data[,1], main=paste("Histograma de", names(data)[1]))
library(gplots)
hist(data[,1], main=paste("Histograma de", names(data)[1]), xlab=names(data)[1])
par(mfrow=c(1,2))
hist(data[,1], main=paste("Histograma de", names(data)[1]), xlab=names(data)[1])
hist(data[,2], main=paste("Histograma de", names(data)[2]), xlab=names(data)[2])
data$Sexo<-as.factor(data$Sexo)
summary(data)
var(data[,1:3])
par(mfrow=c(2,2))
plot(data)
summary(data)
par(mfrow=c(2,2))
plot(data)
par(mfrow=c(1,1))
pie(table(data$Sexo))
par(mfrow=c(2,2))
plot(data)
<!--begin.rcode
par(mfrow=c(2,2))
plot(data)
head(data)
par(mfrow=c(1,1))
pie(table(data$Sexo))
par(mfrow=c(1,3))
for (i in 1:3){
boxplot(data[,i]);
title(names(data)[i])
}
par(mfrow=c(1,2))
boxplot(data[,1])
title(main=names(data)[1], sub="Sin muescas")
boxplot(data[,2], notch=T)
title(main=names(data)[2], sub="Con muescas")
par(mfrow=c(1,3))
for (i in 1:3){
boxplot(data[,i]);
title(names(data)[i])
}
par(mfrow=c(1,2))
par(mfrow=c(1,3))
for (i in 1:3){
boxplot(data[,i], notch=T);
title(names(data)[i])
}
par(mfrow=c(1,2))
par(mfrow=c(1,2))
hist(data[,1], main=paste("Histograma de", names(data)[1]), xlab=names(data)[1], ylab="Frecuencia")
hist(data[,2], main=paste("Histograma de", names(data)[2]), xlab=names(data)[2], ylab="Frecuencia")
par(mfrow=c(1,3))
for (i in 1:3){
hist(data[,i], main=paste("Histograma de", names(data)[i]), xlab=names(data)[i], ylab="Frecuencia");
}
par(mfrow=c(1,2))
par(mfrow=c(1,3))
1
1
1
1
par(mfrow=c(1,1))
pie(table(data$Sexo))
par(mfrow=c(1,1))
t=table(data$Sexo)
l=paste(names(t),"\n",table,sep="")
pie(t, labels=l, main="Distribución del Sexo"))
par(mfrow=c(1,1))
t=table(data$Sexo)
l=paste(names(t),"\n",table,sep="")
pie(t, labels=l, main="Distribución del Sexo")
l=paste(names(t),"\n",table,sep="")
par(mfrow=c(1,1))
t=table(data$Sexo)
t
names(t)
l=paste(names(t),"\n",table,sep="")
t=table(data$Sexo)
l=paste(names(t),"\n",t,sep="")
pie(t, labels=l, main="Distribución del Sexo")
par(mfrow=c(1,1))
t=table(data$Sexo)
l=paste(names(t)," ",t,sep="")
pie(t, labels=l, main="Distribución del Sexo")
par(mfrow=c(1,1))
t=table(data$Sexo)
l=paste(names(t),": ",t,sep="")
pie(t, labels=l, main="Distribución del Sexo")
par(mfrow=c(1,1))
t=table(data$Sexo)
l=paste(names(t),": ",t, "(", t/(sum(t)), "%)", sep="")
pie(t, labels=l, main="Distribución del Sexo")
par(mfrow=c(1,1))
t=table(data$Sexo)
l=paste(names(t),": ",t, "(", 100*t/(sum(t)), "%)", sep="")
pie(t, labels=l, main="Distribución del Sexo")
par(mfrow=c(1,1))
t=table(data$Sexo)
l=paste(names(t),": ",t, " (", round(100*t/sum(t),2), "%)", sep="")
pie(t, labels=l, main="Distribución del Sexo")
data[data$Sexo=="Hombre"]
data[,data$Sexo=="Hombre"]
data[data$Sexo=="Hombre",]
hombres=data[data$Sexo=="Hombre",]
mujeres=data[data$Sexo=="Mujer",]
head(mujeres)
tail(mujeres)
head(hombres)
tail(hombres)
summary(hombres)
head(mujeres)
tail(mujeres)
summary(mujeres)
par(mfrow=c(1,2))
boxplot(hombres$peso, notch=T)
title("Peso Hombres")
boxplot(mujeres$peso, notch=T)
title("Peso Mujeres")
par(mfrow=c(1,4))
boxplot(hombres$Peso, notch=T)
title("Peso Hombres")
boxplot(mujeres$Peso, notch=T)
title("Peso Mujeres")
boxplot(hombres$Altura, notch=T)
title("Altura Hombres")
boxplot(mujeres$Altura, notch=T)
boxplot(mujeres$Altura, notch=F)
par(mfrow=c(1,4))
boxplot(hombres$Peso, notch=F)
title("Peso Hombres")
boxplot(mujeres$Peso, notch=F)
title("Peso Mujeres")
boxplot(hombres$Altura, notch=F)
title("Altura Hombres")
boxplot(mujeres$Altura, notch=F)
