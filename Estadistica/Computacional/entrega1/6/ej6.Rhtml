
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="/docs/4.0/assets/img/favicons/favicon.ico">

    <title>Ejercicio 6</title>

    <link rel="canonical" href="https://getbootstrap.com/docs/4.0/examples/sticky-footer/">

    <!-- Bootstrap core CSS -->
    <link href="../bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="../sticky-footer.css" rel="stylesheet">
  </head>
  
  <body>

    <!-- Begin page content -->
    <main role="main" class="container">
      <h1 class="mt-5">Entrega 1: Ejercicio 6</h1>
      <p class="lead">David Cabezas</p>
      
      <p>
      Fijamos la semilla.
      </p>

<!--begin.rcode
set.seed(18)
end.rcode-->

<p>Función que simula un paso.</p>
<!--begin.rcode
paso <- function(x,y) {
  
  dados = sample(6,3,T) # Lanzo los tres dados
  
  if (dados[1]<=2){ # Si primer dado es 1 ó 2, una unidad a la derecha
    x=x+1
  }
  else{ # Si no, una a la izquierda
    x=x-1
  }
  
  if (dados[2]+dados[3]<5){ # Si la suma de los dados 2 y 3 es menor  que 5, una unidad hacia arriba
    y=y+1
  }
  else{ # Si no, una hacia abajo
    y=y-1
  }
  return(c(x,y)) # Devuelvo el punto actualizado
}

paso(0,0)
end.rcode-->

<p>Función que simula el movimiento.</p>

<!--begin.rcode
desplazamiento <- function(lim=10000){
  x=0
  y=0
  t=2
  progresionX=rep(0,lim)
  progresionY=rep(0,lim)
  while (t<=lim){
    P=paso(x,y) # Desplazamiento
    x=P[1]
    y=P[2]
    progresionX[t]=x     # Guardo sucesión
    progresionY[t]=y
    if (abs(x)>100){ # Condición de parada
      break
    }
    t=t+1
  }
  salida=t<=lim # Si no llegó al límite, alcanzó la condición de salida
  
  if (!salida){ # Si llega al limite no se procesa el ultimo valor de t
    t=t-1
  }
  
  progresionX=progresionX[1:t]
  progresionY=progresionY[1:t]
  progresion=data.frame(x=progresionX,y=progresionY)
  
  return( list( progresion=progresion, # Hasta donde recorrió, lo demás son ceros
                pasos=t-1, # Número de desplazamientos, llamadas a la función desplazamiento
                salida=salida
                ) )
}

resultado=desplazamiento(10000)
end.rcode-->

<p>Representación del movimiento con un camino terminado en flecha
Código modificado de <a href="https://stackoverflow.com/questions/16571390/making-a-trajectory-plot-using-r">este post</a>.
<p>
<!--begin.rcode
library("ggplot2")
library(grid) # needed for arrow function
library(data.table)
# see http://docs.ggplot2.org/current/geom_segment.html
qplot(x, y, data = resultado$progresion)+ 
  geom_path(linetype=1, size=0.5, arrow=arrow(angle=15, length=unit(0.08,'inches'), ends='last', type="closed"), color='red')+
  geom_point (shape='.', size=1)
end.rcode-->


    </main>

    <footer class="footer">
      <div class="container">
        <span class="text-muted">David Cabezas Berrido.
        Plantilla <a href="https://getbootstrap.com/docs/4.0/examples/sticky-footer">sticky footer</a>
        con modificaciones de <a href="https://stackoverflow.com/questions/19330611/fixed-footer-in-bootstrap">este post</a>. 
        </span> 
      </div>
    </footer>
  </body>
</html>